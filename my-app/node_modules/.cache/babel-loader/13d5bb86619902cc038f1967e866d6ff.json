{"ast":null,"code":"let initialState = [];\n\nfunction bugsReducer(currentState = initialState, action) {\n  if (action.type === \"BUG_ADD_NEW\") {\n    const newState = [...currentState, action.payload];\n    return newState;\n  }\n\n  if (action.type === \"BUG_REPLACE\") {\n    const bugToReplace = action.payload,\n          newState = currentState.map(bug => bug.id === bugToReplace.id ? bugToReplace : bug);\n    return newState;\n  }\n\n  if (action.type === \"BUG_REMOVE\") {\n    const bugToRemove = action.payload,\n          newState = currentState.filter(bug => bug.id !== bugToRemove.id);\n    return newState;\n  }\n\n  if (action.type === \"BUG_REMOVE_MANY\") {\n    const bugsToRemove = action.payload,\n          newState = currentState.filter(bug => !bugsToRemove.find(b => b.id === bug.id));\n    return newState;\n  }\n\n  return currentState;\n}\n\nexport default bugsReducer;","map":{"version":3,"sources":["C:/Users/KarthikRajaB/Desktop/React-training/my-app/src/reducers/bugsReducer.js"],"names":["initialState","bugsReducer","currentState","action","type","newState","payload","bugToReplace","map","bug","id","bugToRemove","filter","bugsToRemove","find","b"],"mappings":"AAAA,IAAIA,YAAY,GAAG,EAAnB;;AAEA,SAASC,WAAT,CAAqBC,YAAY,GAAGF,YAApC,EAAkDG,MAAlD,EAA0D;AACxD,MAAIA,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,UAAMC,QAAQ,GAAG,CAAC,GAAGH,YAAJ,EAAkBC,MAAM,CAACG,OAAzB,CAAjB;AACA,WAAOD,QAAP;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC;AACjC,UAAMG,YAAY,GAAGJ,MAAM,CAACG,OAA5B;AAAA,UACED,QAAQ,GAAGH,YAAY,CAACM,GAAb,CAAiBC,GAAG,IAC7BA,GAAG,CAACC,EAAJ,KAAWH,YAAY,CAACG,EAAxB,GAA6BH,YAA7B,GAA4CE,GADnC,CADb;AAIA,WAAOJ,QAAP;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,UAAMO,WAAW,GAAGR,MAAM,CAACG,OAA3B;AAAA,UACED,QAAQ,GAAGH,YAAY,CAACU,MAAb,CAAoBH,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWC,WAAW,CAACD,EAAlD,CADb;AAEA,WAAOL,QAAP;AACD;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgB,iBAApB,EAAuC;AACrC,UAAMS,YAAY,GAAGV,MAAM,CAACG,OAA5B;AAAA,UACED,QAAQ,GAAGH,YAAY,CAACU,MAAb,CACTH,GAAG,IAAI,CAACI,YAAY,CAACC,IAAb,CAAkBC,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASD,GAAG,CAACC,EAApC,CADC,CADb;AAIA,WAAOL,QAAP;AACD;;AACD,SAAOH,YAAP;AACD;;AAED,eAAeD,WAAf","sourcesContent":["let initialState = [];\r\n\r\nfunction bugsReducer(currentState = initialState, action) {\r\n  if (action.type === \"BUG_ADD_NEW\") {\r\n    const newState = [...currentState, action.payload];\r\n    return newState;\r\n  }\r\n  if (action.type === \"BUG_REPLACE\") {\r\n    const bugToReplace = action.payload,\r\n      newState = currentState.map(bug =>\r\n        bug.id === bugToReplace.id ? bugToReplace : bug\r\n      );\r\n    return newState;\r\n  }\r\n  if (action.type === \"BUG_REMOVE\") {\r\n    const bugToRemove = action.payload,\r\n      newState = currentState.filter(bug => bug.id !== bugToRemove.id);\r\n    return newState;\r\n  }\r\n  if (action.type === \"BUG_REMOVE_MANY\") {\r\n    const bugsToRemove = action.payload,\r\n      newState = currentState.filter(\r\n        bug => !bugsToRemove.find(b => b.id === bug.id)\r\n      );\r\n    return newState;\r\n  }\r\n  return currentState;\r\n}\r\n\r\nexport default bugsReducer;"]},"metadata":{},"sourceType":"module"}