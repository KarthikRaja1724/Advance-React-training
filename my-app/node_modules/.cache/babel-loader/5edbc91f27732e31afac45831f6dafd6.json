{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KarthikRajaB\\\\Desktop\\\\Advance-React-training\\\\my-app\\\\src\\\\bugTracker\\\\views\\\\bugEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst BugEdit = ({\n  addNew,\n  projects\n}) => {\n  _s();\n\n  const [newBugName, setNewBugName] = useState(\"\");\n  let selectedId = -1;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"edit\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: \"Bug Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: evt => setNewBugName(evt.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: \"Project :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      id: \"projectSelect\",\n      onChange: () => selectedId = document.getElementById(\"projectSelect\").selectedIndex,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"---Select---\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: project.name,\n        onClick: true,\n        children: project.name\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 8\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      value: \"Add New\",\n      onClick: () => addNew(newBugName, projects[selectedId])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BugEdit, \"Nx9QfgT5+r8SfEEOb5A9punKmns=\");\n\n_c = BugEdit;\n\nfunction mapStatetoProps(storeState) {\n  return {\n    projects: storeState.projectState\n  };\n}\n\nexport default connect(mapStatetoProps, null)(BugEdit);\n\nvar _c;\n\n$RefreshReg$(_c, \"BugEdit\");","map":{"version":3,"sources":["C:/Users/KarthikRajaB/Desktop/Advance-React-training/my-app/src/bugTracker/views/bugEdit.jsx"],"names":["useState","connect","BugEdit","addNew","projects","newBugName","setNewBugName","selectedId","evt","target","value","document","getElementById","selectedIndex","map","project","name","id","mapStatetoProps","storeState","projectState"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAyB;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAIO,UAAU,GAAE,CAAC,CAAjB;AACA,sBAEE;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEC,GAAG,IAAIF,aAAa,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIA;AAAQ,MAAA,IAAI,EAAC,EAAb;AAAgB,MAAA,EAAE,EAAC,eAAnB;AAAmC,MAAA,QAAQ,EAAE,MAAIH,UAAU,GAAGI,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,aAAvG;AAAA,8BAEA;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAGGT,QAAQ,CAACU,GAAT,CAAcC,OAAD,iBACb;AAAyB,QAAA,KAAK,EAAEA,OAAO,CAACC,IAAxC;AAA8C,QAAA,OAAO,MAArD;AAAA,kBAAuDD,OAAO,CAACC;AAA/D,SAAaD,OAAO,CAACE,EAArB;AAAA;AAAA;AAAA;AAAA,cADA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAWE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,SAA3B;AAAqC,MAAA,OAAO,EAAE,MAAMd,MAAM,CAACE,UAAD,EAAYD,QAAQ,CAACG,UAAD,CAApB;AAA1D;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CAnBD;;GAAML,O;;KAAAA,O;;AAoBN,SAASgB,eAAT,CAAyBC,UAAzB,EAAoC;AAClC,SAAO;AAACf,IAAAA,QAAQ,EAACe,UAAU,CAACC;AAArB,GAAP;AACD;;AACD,eAAenB,OAAO,CAACiB,eAAD,EAAiB,IAAjB,CAAP,CAA8BhB,OAA9B,CAAf","sourcesContent":["import { useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nconst BugEdit = ({ addNew ,projects}) => {\r\n  const [newBugName, setNewBugName] = useState(\"\");\r\n  let selectedId= -1;\r\n  return (\r\n    \r\n    <section className=\"edit\">\r\n      <label htmlFor=\"\">Bug Name :</label>\r\n      <input type=\"text\" onChange={evt => setNewBugName(evt.target.value)} />\r\n      <label htmlFor=\"\">Project :</label>\r\n    <select name=\"\" id=\"projectSelect\" onChange={()=>selectedId = document.getElementById(\"projectSelect\").selectedIndex}>\r\n      \r\n    <option value=\"\">---Select---</option>\r\n      {projects.map((project) =>      \r\n       <option key={project.id} value={project.name} onClick>{project.name}</option>\r\n     )}\r\n    </select>\r\n      <input type=\"button\" value=\"Add New\" onClick={() => addNew(newBugName,projects[selectedId])} />\r\n    </section>\r\n  );\r\n};\r\nfunction mapStatetoProps(storeState){\r\n  return {projects:storeState.projectState};\r\n}\r\nexport default connect(mapStatetoProps,null)(BugEdit);"]},"metadata":{},"sourceType":"module"}